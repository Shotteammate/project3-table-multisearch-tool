{"version":3,"sources":["components/SearchBar/SearchBar.js","components/CountryTable/TableRow.js","components/CountryTable/CountryTable.js","App.js","index.js"],"names":["SearchBar","handleOnChange","e","props","handleSearchEvents","target","value","name","className","type","this","country","onChange","placeholder","region","subregion","Component","TableRow","capital","language","CountryTable","rows","data","forEach","dataObj","push","key","App","title","setState","state","isLoading","fetch","then","response","json","array","i","length","entry","official","languages","Object","keys","catch","error","console","log","filteredData","filter","indexOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f116c6f2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './SearchBar.css'\r\n\r\nexport class SearchBar extends Component {\r\n\r\n  handleOnChange = (e) => {\r\n    //console.log('value: '+e.target.value+ ' name: '+ e.target.name);\r\n    this.props.handleSearchEvents(e.target.value, e.target.name);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className='SearchBarStyle'>\r\n        <input \r\n          type=\"text\"\r\n          name='country'\r\n          value={this.props.country}\r\n          onChange={this.handleOnChange}\r\n          placeholder='Countries...'/>\r\n        <input \r\n          type=\"text\" \r\n          name='region'\r\n          value={this.props.region}\r\n          onChange={this.handleOnChange}\r\n          placeholder='Regions...'/>\r\n        <input \r\n          type=\"text\" \r\n          name='subregion'\r\n          value={this.props.subregion}\r\n          onChange={this.handleOnChange}\r\n          placeholder='Subregions...'/>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBar\r\n","import React, { Component } from 'react';\r\nimport './TableRow.css';\r\n\r\nexport class TableRow extends Component {\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td>{this.props.country}</td>\r\n        <td>{this.props.capital}</td>\r\n        <td>{this.props.region}</td>\r\n        <td>{this.props.subregion}</td>\r\n        <td>{this.props.language}</td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TableRow;\r\n","import React, { Component } from 'react';\r\nimport TableRow from './TableRow';\r\nimport './CountryTable.css';\r\n\r\nexport class CountryTable extends Component {\r\n  render() {\r\n    let rows = [];\r\n\r\n    //generate the table rows\r\n    //based on container representational pattern and Hook, CountryTable should not have business logic\r\n    this.props.data.forEach((dataObj) => {\r\n      rows.push(\r\n        <TableRow\r\n          key={dataObj.country}\r\n          country={dataObj.country}\r\n          capital={dataObj.capital}\r\n          region={dataObj.region}\r\n          subregion={dataObj.subregion}\r\n          language={dataObj.language} />);\r\n    });\r\n\r\n    return (\r\n      <table className='tableStyle'>\r\n        <thead>\r\n          <tr>\r\n            <th>Country</th>\r\n            <th>Capital</th>\r\n            <th>Region</th>\r\n            <th>Subregion</th>\r\n            <th>Language</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className='tableBodyStyle'>\r\n          {rows}\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CountryTable\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport CountryTable from './components/CountryTable/CountryTable';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.data = []; // this data should not live in state\n    this.state = {\n      country: '',\n      region: '',\n      subregion: '',\n      isLoading: true,\n    };\n  }\n\n  // fetch src data from JSON url (on Github)\n  //UNSAFE_componentWillMount()\n  componentDidMount() {\n    // Where we're fetching data from\n    fetch(`https://raw.githubusercontent.com/mledoze/countries/master/countries.json`)\n      // We get the API response and receive data in JSON format...\n      .then(response => response.json())\n      .then(data => {\n        let array = [];\n\n        for (let i = 0; i < data.length; i++) {\n          let entry = {};\n          //key value pairs\n          entry.country = data[i].name.official;\n          entry.capital = data[i].capital;\n          entry.region = data[i].region;\n          entry.subregion = data[i].subregion;\n          // get first child of the languages object\n          entry.language = data[i].languages[Object.keys(data[i].languages)[0]];\n\n          array[i] = entry;\n        }\n        this.data = array;\n        this.setState({\n          isLoading: false,\n        });\n      })\n\n      // Catch any errors we hit and update the app\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n  handleSearchEvents = (title, name) => {\n    this.setState({ [name]: title });\n  }\n\n  render() {\n    console.log(this.data); // data is array of objects\n    const filteredData = this.data.filter((dataObj)=> (dataObj.country.indexOf(this.state.country) !== -1)&&\n    (dataObj.region.indexOf(this.state.region) !== -1)&&\n    (dataObj.subregion.indexOf(this.state.subregion) !== -1));\n  \n\n    return (\n      <div className=\"App\">\n        <h1>Country/Capital Data Multi-Search Service</h1>\n        <SearchBar\n          country={this.state.country}\n          region={this.state.region}\n          subregion={this.state.subregion}\n          handleSearchEvents={this.handleSearchEvents} />\n        <CountryTable\n          country={this.state.country}\n          region={this.state.region}\n          subregion={this.state.subregion}\n          data={filteredData} /> {/* should pass filtered data into CountryTable*/}\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n// <p>{this.state.data}</p>\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}